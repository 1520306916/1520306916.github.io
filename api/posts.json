{"total":5,"pageSize":10,"pageCount":1,"data":[{"title":"","slug":"webpack高级","date":"2018-04-21T11:27:11.243Z","updated":"2017-11-10T13:35:26.000Z","comments":true,"path":"api/articles/webpack高级.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"移动App第2天\"><a href=\"#移动App第2天\" class=\"headerlink\" title=\"移动App第2天\"></a>移动App第2天</h2><h2 id=\"webpack的发布策略\"><a href=\"#webpack的发布策略\" class=\"headerlink\" title=\"webpack的发布策略\"></a>webpack的发布策略</h2><ol>\n<li>在实际开发中，一般会有两套项目方案：<ul>\n<li>一套是开发期间的项目，包含了测试文件、测试数据、开发工具、测试工具等相关配置，有利于项目的开发和测试，但是这些文件仅用于开发，发布项目时候需要剔除；</li>\n<li>另一套是部署期间的项目，剔除了那些客户用不到的测试数据测试工具和文件，比较纯净，减少了项目发布后的体积，有利于安装和部署！</li>\n</ul>\n</li>\n<li><p>为了满足我们的发布策略，需要新建一个配置文件，命名为<code>webpack.publish.config.js</code>，将<code>webpack.config.js</code>的配置拷贝过去，剔除一些开发配置项即可：</p>\n<ul>\n<li><p>将<code>devServer</code>节点删掉：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">devServer:</span> <span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">       hot:</span> <span class=\"literal\">true</span><span class=\"string\">,</span></span><br><span class=\"line\"><span class=\"attr\">       open:</span> <span class=\"literal\">true</span><span class=\"string\">,</span></span><br><span class=\"line\"><span class=\"attr\">       port:</span> <span class=\"number\">4321</span></span><br><span class=\"line\">   <span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将<code>plugins</code>节点下的热更新插件删掉：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">webpack</span>.HotModuleReplacementPlugin()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>修改<code>url-loader</code>，将图片放入统一的images文件夹之下：</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; test: /\\.(<span class=\"name\">png</span>|jpg|gif)$/, use: 'url-loader?limit=43959&amp;name=images/[name].[ext]' &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>或者使用<code>img-</code>前缀加上<code>7位的hash名称</code>：<br><figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; test: /\\.(<span class=\"name\">png</span>|jpg|gif)$/, use: 'url-loader?limit=43959&amp;name=images/img-[hash:7].[ext]' &#125;</span><br></pre></td></tr></table></figure></p>\n<ol start=\"4\">\n<li>在<code>package.json</code>中的script节点下新增<code>dev</code>命令，通过<code>--config</code>指定webpack启动时要读取的配置文件：<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"<span class=\"selector-tag\">pub</span>\": \"<span class=\"selector-tag\">webpack</span> <span class=\"selector-tag\">--config</span> <span class=\"selector-tag\">webpack</span><span class=\"selector-class\">.publish</span><span class=\"selector-class\">.config</span><span class=\"selector-class\">.js</span>\"</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"每次重新构建时候删除dist目录\"><a href=\"#每次重新构建时候删除dist目录\" class=\"headerlink\" title=\"每次重新构建时候删除dist目录\"></a>每次重新构建时候删除dist目录</h2><ol>\n<li>运行<code>cnpm i clean-webpack-plugin --save-dev</code></li>\n<li><p>在头部引入这个插件：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var cleanWebpackPlugin</span> = require(<span class=\"string\">'clean-webpack-plugin'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在<code>plugins</code>节点下使用这个插件：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">cleanWebpackPlugin</span>([<span class=\"string\">'dist'</span>])</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"分离第三方包改造webpack-publish-config-js\"><a href=\"#分离第三方包改造webpack-publish-config-js\" class=\"headerlink\" title=\"分离第三方包改造webpack.publish.config.js\"></a>分离第三方包改造<code>webpack.publish.config.js</code></h2><ol>\n<li><p>改造entry节点如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">entry</span>: &#123;</span><br><span class=\"line\">        <span class=\"attribute\">app</span>: path.<span class=\"built_in\">resolve</span>(__dirname, <span class=\"string\">'src/js/main.js'</span>), // 自己代码的入口</span><br><span class=\"line\">        vendors: [<span class=\"string\">'jquery'</span>] // 要分离的第三方包的入口</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在plugins节点下新增插件：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new webpack<span class=\"selector-class\">.optimize</span><span class=\"selector-class\">.CommonsChunkPlugin</span>(&#123; <span class=\"comment\">// 抽离第三方包的插件</span></span><br><span class=\"line\">        name:<span class=\"string\">'vendors'</span>, <span class=\"comment\">// 指定抽离第三方包的入口名称</span></span><br><span class=\"line\">        filename:<span class=\"string\">'vendors.js'</span> <span class=\"comment\">// 抽离出的公共模块的名称</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>html-webpack-plugin</code>在生成<code>index.html</code>文件的时候，会自动将抽离的第三方包引入进去！</p>\n</li>\n</ol>\n<h2 id=\"优化压缩JS\"><a href=\"#优化压缩JS\" class=\"headerlink\" title=\"优化压缩JS\"></a><a href=\"https://webpack.js.org/configuration/plugins/#plugins\" target=\"_blank\" rel=\"noopener\">优化压缩JS</a></h2><p>在plugins数组中添加：<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> webpack.optimize.UglifyJsPlugin(&#123; <span class=\"comment\">// 优化压缩JS</span></span><br><span class=\"line\">    compress:&#123;</span><br><span class=\"line\">        warnings:<span class=\"literal\">false</span> <span class=\"comment\">// 移除警告</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"><span class=\"keyword\">new</span> webpack.DefinePlugin(&#123; <span class=\"comment\">// 设置为产品上线环境，进一步压缩JS代码</span></span><br><span class=\"line\">    <span class=\"string\">'process.env.NODE_ENV'</span>: <span class=\"string\">'\"production\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"优化压缩HTML文件\"><a href=\"#优化压缩HTML文件\" class=\"headerlink\" title=\"优化压缩HTML文件\"></a>优化压缩HTML文件</h2><p>在<code>plugins</code>节点下的<code>htmlWebpackPlugin</code>插件中，添加<code>minify</code>子节点：<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">minify:</span><span class=\"string\">&#123;//</span> <span class=\"string\">压缩HTML代码</span></span><br><span class=\"line\"><span class=\"attr\">    collapseWhitespace:</span><span class=\"literal\">true</span><span class=\"string\">,</span> <span class=\"string\">//</span> <span class=\"string\">合并空白字符</span></span><br><span class=\"line\"><span class=\"attr\">    removeComments:</span><span class=\"literal\">true</span><span class=\"string\">,</span> <span class=\"string\">//</span> <span class=\"string\">移除注释</span></span><br><span class=\"line\"><span class=\"attr\">    removeAttributeQuotes:</span><span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">移除属性上的引号</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>其他优化项请参考：<a href=\"https://github.com/kangax/html-minifier#options-quick-reference\" target=\"_blank\" rel=\"noopener\">html-minifier - github</a></p>\n<h2 id=\"抽取CSS文件\"><a href=\"#抽取CSS文件\" class=\"headerlink\" title=\"抽取CSS文件\"></a><a href=\"https://github.com/webpack-contrib/extract-text-webpack-plugin\" target=\"_blank\" rel=\"noopener\">抽取CSS文件</a></h2><ol>\n<li>运行<code>npm install --save-dev extract-text-webpack-plugin</code>安装抽取CSS文件的插件。</li>\n<li><p>在配置文件中导入插件：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">const ExtractTextPlugin</span> = require(<span class=\"string\">\"extract-text-webpack-plugin\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改CSS和Sass的loader如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attribute\">test</span>: /\\.css$/, use: ExtractTextPlugin.<span class=\"built_in\">extract</span>(&#123;</span><br><span class=\"line\">        fallback: <span class=\"string\">\"style-loader\"</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">\"css-loader\"</span>],</span><br><span class=\"line\">        publicPath: <span class=\"string\">'../'</span> // 设置图片路径</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attribute\">test</span>: /\\.scss$/, use: ExtractTextPlugin.<span class=\"built_in\">extract</span>(&#123;</span><br><span class=\"line\">        fallback: <span class=\"string\">\"style-loader\"</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">'css-loader'</span>, <span class=\"string\">'sass-loader'</span>],</span><br><span class=\"line\">        publicPath: <span class=\"string\">'../'</span> // 设置图片路径</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在plugins节点下新增插件：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">ExtractTextPlugin</span>(<span class=\"string\">\"css/styles.css\"</span>), <span class=\"comment\">// 抽取CSS文件的插件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"压缩抽取出来的CSS文件\"><a href=\"#压缩抽取出来的CSS文件\" class=\"headerlink\" title=\"压缩抽取出来的CSS文件\"></a><a href=\"https://github.com/NMFR/optimize-css-assets-webpack-plugin\" target=\"_blank\" rel=\"noopener\">压缩抽取出来的CSS文件</a></h2><ol>\n<li>运行<code>cnpm i optimize-css-assets-webpack-plugin --save-dev</code>安装插件到开发依赖。</li>\n<li><p>在配置文件头部导入插件：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var OptimizeCssAssetsPlugin</span> = require(<span class=\"string\">'optimize-css-assets-webpack-plugin'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在plugins节点下新增插件：</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"type\">OptimizeCssAssetsPlugin</span>() <span class=\"comment\">// 压缩CSS文件的插件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h2><ol>\n<li><a href=\"http://www.sasschina.com/guide/\" target=\"_blank\" rel=\"noopener\">Sass 基础教程</a></li>\n<li><a href=\"https://github.com/webpack/webpack-dev-server/releases\" target=\"_blank\" rel=\"noopener\">webpack-dev-server</a></li>\n<li><a href=\"http://majing.io/questions/804\" target=\"_blank\" rel=\"noopener\">You have not accepted the license agreements of the following </a></li>\n</ol>\n","text":"移动App第2天webpack的发布策略在实际开发中，一般会有两套项目方案：一套是开发期间的项目，包含了测试文件、测试数据、开发工具、测试工具等相关配置，有利于项目的开发和测试，但是这些文件仅用于开发，发布项目时候需要剔除；另一套是部署期间的项目，剔除了那些客户用不到的测试数据测","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"图片测试","slug":"123-1","date":"2018-04-09T08:47:26.000Z","updated":"2018-04-09T08:47:26.000Z","comments":true,"path":"api/articles/123-1.json","excerpt":"<blockquote>\n<p>测试<br><del>西西</del><br>","keywords":null,"cover":"/static/images/miku.jpg","content":null,"text":"测试<br>西西<br>Column 1Column 2Column 3 [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"单元测试","slug":"单元测试","count":3,"path":"api/categories/单元测试.json"},{"name":"图片测试","slug":"单元测试/图片测试","count":1,"path":"api/categories/单元测试/图片测试.json"}],"tags":[{"name":"测试","slug":"测试","count":2,"path":"api/tags/测试.json"},{"name":"单元测试","slug":"单元测试","count":1,"path":"api/tags/单元测试.json"}]},{"title":"测试","slug":"测试","date":"2018-04-09T06:47:26.000Z","updated":"2018-04-09T06:47:26.000Z","comments":true,"path":"api/articles/测试.json","excerpt":"<p>The following contents should be invisible in home/archive page.</p>","keywords":null,"cover":null,"content":null,"text":"The following contents should be invisible in home/archive page.Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vit","link":"","raw":null,"photos":[],"categories":[{"name":"单元测试","slug":"单元测试","count":3,"path":"api/categories/单元测试.json"},{"name":"more测试","slug":"单元测试/more测试","count":1,"path":"api/categories/单元测试/more测试.json"}],"tags":[{"name":"测试","slug":"测试","count":2,"path":"api/tags/测试.json"}]},{"title":"和","slug":"和","date":"2018-04-08T11:48:41.000Z","updated":"2018-04-08T11:48:41.000Z","comments":true,"path":"api/articles/和.json","excerpt":"","keywords":null,"cover":"http://cdn.v2ex.com/avatar/b758/6696/138436_large.png?m=1442316154","content":"<a id=\"more\"></a>\n<p><img src=\"http://cdn.v2ex.com/avatar/b758/6696/138436_large.png?m=1442316154\" alt=\"\"></p>\n","text":" [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"问答","slug":"问答","count":1,"path":"api/categories/问答.json"}],"tags":[{"name":"信息","slug":"信息","count":1,"path":"api/tags/信息.json"}]},{"title":"123","slug":"123","date":"2018-04-08T07:08:34.000Z","updated":"2018-04-08T07:08:34.000Z","comments":true,"path":"api/articles/123.json","excerpt":"","keywords":null,"cover":null,"content":"<p>#测试</p>\n","text":"#测试","link":"","raw":null,"photos":[],"categories":[{"name":"单元测试","slug":"单元测试","count":3,"path":"api/categories/单元测试.json"},{"name":"测试","slug":"单元测试/测试","count":1,"path":"api/categories/单元测试/测试.json"}],"tags":[]}]}