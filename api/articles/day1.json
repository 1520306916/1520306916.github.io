{"title":"移动App","slug":"day1","date":"2018-02-02T11:47:26.000Z","updated":"2018-03-02T11:47:26.000Z","comments":true,"path":"api/articles/day1.json","photos":[],"link":"","excerpt":"移动App苹果上的软件是如何开发出来的：使用的是 OC、或者使用Swift这门语言安卓平台上的软件又是如何开发出来的：使用安卓相关的语言开发的，Java，安卓的控件进行开发苹果和安卓平台上共有的软件是如何开发出来的：腾讯招两套开发人员【开发组】，手机京东前端移动 App（Application）开发技术，去开发手机端的应用程序；前端的混合移动App开发技术，并没有使用 苹果 或 安卓 官方推荐的 开发平台和开发方式，而是抛弃了 官方提供的方式，使用 前端的独有的技术进行移动App开发体验；","covers":null,"content":"<h1 id=\"移动App\"><a href=\"#移动App\" class=\"headerlink\" title=\"移动App\"></a>移动App</h1><ol>\n<li>苹果上的软件是如何开发出来的：使用的是 OC、或者使用Swift这门语言</li>\n<li>安卓平台上的软件又是如何开发出来的：使用安卓相关的语言开发的，Java，安卓的控件进行开发</li>\n<li>苹果和安卓平台上共有的软件是如何开发出来的：腾讯招两套开发人员【开发组】，手机京东</li>\n<li>前端移动 App（Application）开发技术，去开发手机端的应用程序；</li>\n<li>前端的混合移动App开发技术，并没有使用 苹果 或 安卓 官方推荐的 开发平台和开发方式，而是抛弃了 官方提供的方式，使用 前端的独有的技术进行移动App开发体验；</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"什么是混合移动App开发【重点】\"><a href=\"#什么是混合移动App开发【重点】\" class=\"headerlink\" title=\"什么是混合移动App开发【重点】\"></a>什么是混合移动App开发【重点】</h2><blockquote>\n<p>什么是移动App开发：通俗的理解，就是把开发Web网站的技术（HTML+CSS+JS），通过某种方式，移植到移动App开发上进行使用，这种利用Web开发技术进行移动端开发体验的方式，叫做混合移动App开发！</p>\n</blockquote>\n<h3 id=\"关于移动App开发，需要知道的几个概念：\"><a href=\"#关于移动App开发，需要知道的几个概念：\" class=\"headerlink\" title=\"关于移动App开发，需要知道的几个概念：\"></a>关于移动App开发，需要知道的几个概念：</h3><ul>\n<li>原生开发：它的英文单词是（NativeApp）,指的就是使用 IOS、Android 官方提供的工具、开发平台、配套语言进行 手机App开发的方式；</li>\n<li>混合开发：（HybirdApp）就是使用前端已有的技术，HTML + CSS + JS ，然后再搭配一些相关的打包编译技术，就能够开发出一个手机App，安装到手机中进行使用；</li>\n<li>什么是App：App是（Application的缩写），意思是：可安装的应用程序；</li>\n<li>App的分类：<ul>\n<li>按照平台来划分：<ul>\n<li>PC端：浏览器、代码编辑器、PC端的游戏、听歌的、看视频的、聊天的</li>\n<li>移动端：手机QQ、手机微信、手机爱奇艺、亡者农药</li>\n</ul>\n</li>\n<li>按照功能来划分：<ul>\n<li>游戏：愤怒的小鸡仔、植物大战僵尸、亡者农药…..LOL</li>\n<li>应用：非游戏类的软件，支付宝、陌陌、美团外卖、</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>App和Web的区别：<ul>\n<li>APP概念：App是（Application的缩写），意思是：可安装的应用程序；<ul>\n<li>优点：流畅、稳定、基本上一些App都可以脱网运行，用户体验好；</li>\n<li>缺点：不能跨平台</li>\n</ul>\n</li>\n<li>Web概念：特指那些基于浏览器的web网站（本质：就是网页）<ul>\n<li>优点：可以跨平台（浏览器天生就是跨平台的）</li>\n<li>缺点：没有App流畅、不稳定，受限于网速和网络</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"为什么要学混合App开发\"><a href=\"#为什么要学混合App开发\" class=\"headerlink\" title=\"为什么要学混合App开发\"></a>为什么要学混合App开发</h2><h3 id=\"从程序员的角度分析：\"><a href=\"#从程序员的角度分析：\" class=\"headerlink\" title=\"从程序员的角度分析：\"></a>从程序员的角度分析：</h3><ol>\n<li>挣钱多（别人不会的你会，别人会的，你精通）</li>\n<li>对于找工作来说：（React Native）市场需求量大，好找工作，提高我们的行业竞争力</li>\n<li>能接触到前端流行的技术和框架（各大公司基本都再用React），注意：再React中我们全部都使用ES6语法（class）<ul>\n<li>前端是一个永恒的行业???（只要世界上还有浏览器的存在，必然需要前端，只不过，随着时间的推移，技术更新换代，可能我们对新技术的要求会越来高）</li>\n<li>屌丝的崛起之路：<code>只能做页面</code> -&gt; <code>Ajax前后台数据交互</code> -&gt; <code>Jquery、Bootstrap</code> -&gt; webApp -&gt; <code>三大框架</code> -&gt; <code>可以做手机混合App/桌面应用</code> -&gt; <code>可以做手机原生App</code> -&gt; <code>将来或许可以发射火箭发射卫星发射导弹</code> -&gt; <code>终极目标：统一全宇宙</code></li>\n</ul>\n</li>\n<li>（搞前端App开发）能购置一批牛逼的设备【苹果笔记本、IOS测试机、安卓手机（三星的、华为、小米）】</li>\n</ol>\n<h3 id=\"从企业的角度分析-选择合适自身的移动App开发方式-【重点】\"><a href=\"#从企业的角度分析-选择合适自身的移动App开发方式-【重点】\" class=\"headerlink\" title=\"从企业的角度分析:(选择合适自身的移动App开发方式)【重点】\"></a>从企业的角度分析:(选择合适自身的移动App开发方式)【重点】</h3><ul>\n<li>节省开发成本<ul>\n<li>从工资上：尽最大的可能，压榨员工的剩余劳动力</li>\n<li>从时间上：因为 原生的安卓和IOS开发，它们的开发效率并不是很高，因为原生的代码复杂度比较高，因此原生的开发周期比较慢；如果采用移动App开发，那么，我们的开发周期会很短；因为 HTML + CSS + JS 足够简单；（对于前端开发APP来说，有两种方式，其中，比较早的一种，也是比较简单的一种，就是 先开发出一个网站， 然后再把网站运行一行打包的命令，就能得到一个 APP了）</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><p>市面上常见的App开发方式</p>\n<ul>\n<li>WebApp：基于浏览器实现的，有特定功能的网站，称作WebApp<ul>\n<li>例如：百度脑图、<a href=\"https://m.jd.com/、https://m.taobao.com/#index\" target=\"_blank\" rel=\"noopener\">https://m.jd.com/、https://m.taobao.com/#index</a></li>\n<li>优点：跨平台</li>\n<li>缺点：依赖网络，有白屏效果，相对来说，用户体验差；不能调用硬件底层得设备，比如摄像头；</li>\n</ul>\n</li>\n<li>NativeApp：用android和Object-C等原生语言开发的应用<ul>\n<li>优点：体验好；用户使用起来很流畅；非常适合做游戏【性能高】；可以直接调用硬件底层的API；</li>\n<li>缺点：不能跨平台</li>\n</ul>\n</li>\n<li>HybirdApp：利用前端所学的知识去开发移动端App，兼具2者的优势<ul>\n<li>优点：能够跨平台；体验会好一些；也能够调用硬件底层的API</li>\n<li>缺点：相对于原生体验稍微弱一丢丢；不适合做游戏；适合做非游戏类型的手机App；</li>\n<li>应用场景：</li>\n</ul>\n</li>\n<li>注意： 使用 Java 或者 IOS 写出来的代码和程序，在最终运行的时候，普通的文本代码，都会被编译为 原生的机器码去运行，并不像 JS 这样，解析执行，Java代码是 编译执行的；</li>\n</ul>\n</li>\n<li><p><a href=\"https://facebook.github.io/react-native/showcase.html\" target=\"_blank\" rel=\"noopener\">谁在使用React Native？？？</a></p>\n</li>\n</ol>\n<h2 id=\"企业如何选择合适自己的App开发方式\"><a href=\"#企业如何选择合适自己的App开发方式\" class=\"headerlink\" title=\"企业如何选择合适自己的App开发方式\"></a>企业如何选择合适自己的App开发方式</h2><ol>\n<li>如果这个企业中，曾经使用原生技术开发过一些APP，那么在维护的时候，必然需要使用原生技术来维护</li>\n<li>如果企业中，需要做一些游戏级别的应用，那么推荐使用原生，因为原生运行效率高，对耗电量处理的很好；</li>\n<li>如果企业做一些应用级别的非游戏软件，比如 淘宝、京东、美团，就可以使用 混合APP了；</li>\n<li>在企业中，最主要的是好的点子，如果有了一个好的项目立案，那么最好要立即把这个项目做出来；这时候，使用混合App非常合适，因为开发周期很短，能快速上线，抢先占领市场；【裤衩开发】</li>\n</ol>\n<h2 id=\"企业中项目开发流程\"><a href=\"#企业中项目开发流程\" class=\"headerlink\" title=\"企业中项目开发流程\"></a>企业中项目开发流程</h2><ul>\n<li>需求调研：产品定位、受众群体、市场需求、开发价值；【产出物：需求文档】</li>\n<li>产品设计：功能模块、流程逻辑；【产出物：设计文档，交互稿】，确定项目的基本功能；</li>\n<li>项目开发：项目架构、美工、前端、后台、测试【产品的把控】<strong>要理解前后端分离的概念</strong></li>\n<li>运营维护：上线试运行、调Bug、微调功能模块、产品迭代</li>\n</ul>\n<blockquote>\n<p>根据需求搞设计，根据设计做开发</p>\n</blockquote>\n<h2 id=\"企业技术选型-几大主流技术之间的关系\"><a href=\"#企业技术选型-几大主流技术之间的关系\" class=\"headerlink\" title=\"企业技术选型 - 几大主流技术之间的关系\"></a>企业技术选型 - 几大主流技术之间的关系</h2><ol>\n<li>Angular.js 和 Ionic<ul>\n<li><a href=\"https://angularjs.org/\" target=\"_blank\" rel=\"noopener\">Angular1官网</a></li>\n<li><a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">Angular2官网</a></li>\n<li><a href=\"http://www.ionic.wang/\" target=\"_blank\" rel=\"noopener\">Ionic 中文网</a></li>\n<li><a href=\"http://ionicframework.com/getting-started/\" target=\"_blank\" rel=\"noopener\">Ionic 英文官网</a></li>\n</ul>\n</li>\n<li>Vue.js 和 Weex<ul>\n<li><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue.js官网</a></li>\n<li><a href=\"http://weex.apache.org/cn/references/index.html\" target=\"_blank\" rel=\"noopener\">Weex文档</a></li>\n<li><a href=\"https://github.com/apache/incubator-weex\" target=\"_blank\" rel=\"noopener\">Weex - github地址 - 新</a></li>\n<li><a href=\"https://github.com/alibaba/weex\" target=\"_blank\" rel=\"noopener\">Weex - github地址 - 旧</a></li>\n</ul>\n</li>\n<li>React.js 和 React-Native<ul>\n<li><a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">React.js英文官网</a></li>\n<li><a href=\"http://reactnative.cn/\" target=\"_blank\" rel=\"noopener\">ReactNative中文网</a></li>\n<li><a href=\"http://facebook.github.io/react-native/\" target=\"_blank\" rel=\"noopener\">ReactNative英文网</a></li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>Angular, Vue, React 这三个都是前端框架，我们在进行混合App开发的时候，只是用到了这三个框架的【基础语法】而已；<br>Ionic， Weex， ReactNatvie 这三个都是打包工具（提供了相关的命令行，只要运行指定的命令，就能够把项目打包成一个手机App出来），能够把我们开发出来的应用，最终打包成一个可安装的手机端程序安装包；同时，这三个东西，也提供了好用的一些小组件，方便我们去构建移动App的用户界面；</p>\n</blockquote>\n<h2 id=\"前端混合App开发框架\"><a href=\"#前端混合App开发框架\" class=\"headerlink\" title=\"前端混合App开发框架\"></a>前端混合App开发框架</h2><ol>\n<li>Html5+、ReactNative、Weex、Ionic</li>\n<li><a href=\"http://www.html5plus.org/#home\" target=\"_blank\" rel=\"noopener\">认识HTML5+</a><ul>\n<li>h5+是一个产业联盟，它有一些互联网成员，专门在中国推广H5</li>\n</ul>\n</li>\n<li><a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">HBuilder官网</a></li>\n</ol>\n<h2 id=\"开发框架之间的区别\"><a href=\"#开发框架之间的区别\" class=\"headerlink\" title=\"开发框架之间的区别\"></a>开发框架之间的区别</h2><ol>\n<li>Html5+ 和 Ionic</li>\n<li>ReactNative 和 Weex</li>\n</ol>\n<h2 id=\"使用HBuilder生成安卓应用（在线）\"><a href=\"#使用HBuilder生成安卓应用（在线）\" class=\"headerlink\" title=\"使用HBuilder生成安卓应用（在线）\"></a>使用HBuilder生成安卓应用（在线）</h2><p><a href=\"http://www.html5plus.org/doc/zh_cn/webview.html\" target=\"_blank\" rel=\"noopener\">API地址</a><br>Hbuilder这个工具，是一个在线打包工具，使用很方便，不需要在本地配置开发环境；直接将做好的网站，通过一些简单的操作，就能在线打包为一个App出来；</p>\n<ul>\n<li>在项目上右键 -&gt; 发行 -&gt; 发行为原生安装包</li>\n</ul>\n<p>好处：本地不用配置开发环境；操作方便，对于程序员来说不关心打包的过程，打包过程对于我们来说是透明的；<br>缺点：程序员很少能干预打包的过程；源代码被提交到了云端的服务器，存在项目核心代码被泄露的风险；</p>\n<h2 id=\"环境变量的使用\"><a href=\"#环境变量的使用\" class=\"headerlink\" title=\"环境变量的使用\"></a>环境变量的使用</h2><p>作用：将需要全局使用的工具或者应用程序，配置到Path环境变量中，可以很方便的通过命令行的形式，在任何想要运行这些应用程序的地方，运行它们；</p>\n<h2 id=\"移动App开发环境配置【重点】\"><a href=\"#移动App开发环境配置【重点】\" class=\"headerlink\" title=\"移动App开发环境配置【重点】\"></a>移动App开发环境配置【重点】</h2><h3 id=\"安装最新版本的java-jdk\"><a href=\"#安装最新版本的java-jdk\" class=\"headerlink\" title=\"安装最新版本的java jdk\"></a>安装最新版本的java jdk</h3><ol>\n<li>修改环境变量，新增<code>JAVA_HOME</code>的系统环境变量，值为<code>C:\\Program Files (x86)\\Java\\jdk1.8.0_112</code>，也就是安装JDK的根目录</li>\n<li>修改系统环境变量<code>Path</code>，在<code>Path</code>之后新增<code>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</code></li>\n<li>新建<strong>系统环境变量</strong><code>CLASSPATH</code>，值为<code>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</code></li>\n<li>保存所有的系统环境变量，同时退出系统环境变量配置窗口，然后运行cmd命令行工具，输入<code>javac</code>，如果能出现javac的命令选项，就表示配置成功！</li>\n</ol>\n<h3 id=\"安装Node-js环境\"><a href=\"#安装Node-js环境\" class=\"headerlink\" title=\"安装Node.js环境\"></a>安装Node.js环境</h3><p>注意：需要安装最新的长期稳定版本，不要实验版本；安装完毕之后的node.js会自动配置到全局系统环境变量中<br>安装完毕后，可以输入<code>node -v</code>查看node版本号；</p>\n<h3 id=\"安装C-环境\"><a href=\"#安装C-环境\" class=\"headerlink\" title=\"安装C++环境\"></a>安装C++环境</h3><p>大多数情况下操作系统自带C++环境，不需要手动安装C++环境；<br>如果运行报错，则需要手动安装visual studio中的C++环境；</p>\n<h3 id=\"安装Git环境\"><a href=\"#安装Git环境\" class=\"headerlink\" title=\"安装Git环境\"></a>安装Git环境</h3><p>Git安装完毕后，会自动配置到系统环境变量中；<br>可以通过运行<code>git --version</code>来检查是否正确安装和配置了Git的环境变量；</p>\n<h3 id=\"安装Python环境\"><a href=\"#安装Python环境\" class=\"headerlink\" title=\"安装Python环境\"></a>安装Python环境</h3><ol>\n<li>注意：安装Python时候，只能<strong>安装2.×的版本</strong>，注意勾选安装界面上的<code>Add Python to path</code>，这样才能自动将Python安装到系统环境变量中；</li>\n<li>安装完毕之后，可以在命令行中运行<code>python</code>，检查是否成功安装了python。</li>\n</ol>\n<h3 id=\"配置安卓环境\"><a href=\"#配置安卓环境\" class=\"headerlink\" title=\"配置安卓环境\"></a>配置安卓环境</h3><ol>\n<li>安装<code>installer_r24.3.4-windows.exe</code>，最好手动选择安装到C盘下的android目录</li>\n<li>打开安装的目录，将<code>android-25</code>、<code>android-23</code>(react-native必须依赖这个)解压后，放到<code>platforms</code>文件夹下</li>\n<li>解压<code>platform-tools</code>，放到<code>platform-tools</code>文件夹下</li>\n<li>【这一步直接忽略即可！】<strong>tools文件夹不解压覆盖也行；</strong><del>解压<code>tools</code>，放到安装根目录中</del></li>\n<li>解压<code>build-tools_r23.0.1-windows.zip(react-native必须依赖这个)</code>、<code>build-tools_r23.0.2-windows.zip(weex必须依赖这个)</code>和<code>build-tools_r23.0.3-windows.zip</code>，并将解压出来的文件夹，分别改名为版本号<code>23.0.1</code>、<code>23.0.2</code>和<code>23.0.3</code>；在安装目录中新建文件夹<code>build-tools</code>，并将改名为版本号之后的文件夹，放到新创建出来的<code>build-tools</code>文件夹下</li>\n<li>在安装目录中，新建<code>extras</code>文件夹，在<code>extras</code>文件夹下新建<code>android</code>文件夹；解压<code>m2responsitory</code>文件夹和<code>support</code>文件夹，放到新建的<code>extras -&gt; android</code>文件夹下</li>\n<li>配置安装环境变量：在系统环境变量中新建<code>ANDROID_HOME</code>，值为android SDK Manager的安装路径<code>C:\\Users\\liulongbin\\AppData\\Local\\Android\\android-sdk</code>，紧接着，在Path中新增<code>;%ANDROID_HOME%\\tools;%ANDROID_HOME%\\platform-tools;</code></li>\n</ol>\n<h2 id=\"ReactNative快速打包\"><a href=\"#ReactNative快速打包\" class=\"headerlink\" title=\"ReactNative快速打包\"></a><a href=\"http://reactnative.cn/docs/0.42/getting-started.html\" target=\"_blank\" rel=\"noopener\">ReactNative快速打包</a></h2><ol>\n<li><p>安装完node后建议<strong>设置npm镜像</strong>以加速后面的过程（或使用科学上网工具）。注意：<strong>不要使用cnpm！</strong>cnpm安装的模块路径比较奇怪，packager不能正常识别！</p>\n<blockquote>\n<p>npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a> –global<br><br>npm config set disturl <a href=\"https://npm.taobao.org/dist\" target=\"_blank\" rel=\"noopener\">https://npm.taobao.org/dist</a> –global</p>\n</blockquote>\n</li>\n<li><p>Yarn、React Native的命令行工具（react-native-cli）</p>\n<ul>\n<li><p>Yarn是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>\n<blockquote>\n<p>npm install -g yarn react-native-cli</p>\n</blockquote>\n</li>\n<li><p>安装完yarn后同理也要设置镜像源：</p>\n<blockquote>\n<p>yarn config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">https://registry.npm.taobao.org</a> –global<br><br>yarn config set disturl <a href=\"https://npm.taobao.org/dist\" target=\"_blank\" rel=\"noopener\">https://npm.taobao.org/dist</a> –global</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>运行<code>react-native init AwesomeProject</code>创建React-Native项目</p>\n</li>\n<li>运行<code>cd AwesomeProject</code>切换到项目根目录中，运行<code>adb devices</code>来确保有设备连接到了电脑上</li>\n<li>运行<code>react-native run-android</code>打包编译安卓项目，并部署到模拟器或开发机中</li>\n<li>运行上一条命令之前，要确保有设备连接到了电脑上，可以运行<code>adb devices</code>查看当前接入的设备列表，打包好的文件，放到了<code>android\\app\\build\\outputs\\apk</code>目录下</li>\n<li><a href=\"http://www.open-open.com/lib/view/open1477469117948.html\" target=\"_blank\" rel=\"noopener\">入坑指南</a><blockquote>\n<p><strong>问题1：开启悬浮框权限；</strong><br><br><strong>问题2：Could not get BatchedBridge, make sure your bundle is packaged correctly</strong><br><br>解决方案：在终端中，进入到项目的根目录，执行下面这段命令行：<br><br><code>react-native bundle --platform android --dev false --entry-file index.android.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/</code><br><br>运行之前，需要确保<code>android/app/src/main/</code>目录下有<code>assets</code>文件夹，如果没有，手动创建之~，再运行上面的命令；<br><br><strong>问题3：could not connect to development server</strong><br><br>解决方案：晃动手机，唤起设置属性窗口，点击“Dev settings”，再点击Debuug server host 出现设置ip地址窗口，填写Ip地址和端口号8081，例如<code>192.168.1.111:8081</code></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"Weex快速打包\"><a href=\"#Weex快速打包\" class=\"headerlink\" title=\"Weex快速打包\"></a><a href=\"http://weex.apache.org/cn/guide/tools/toolkit.html\" target=\"_blank\" rel=\"noopener\">Weex快速打包</a></h2><ol>\n<li>安装依赖:Weex 官方提供了 weex-toolkit 的脚手架工具来辅助开发和调试。首先，你需要最新稳定版的 Node.js 和 Weex CLi。</li>\n<li>运行<code>npm install -g weex-toolkit</code>安装Weex 官方提供的 <code>weex-toolkit</code> 脚手架工具到全局环境中</li>\n<li>运行<code>weex create project-name</code>初始化Weex项目</li>\n<li>进入到项目的根目录中，打开cmd窗口，运行<code>weex platform add android</code>安装android模板，首次安装模板时，等待时间较长，建议fq安装模板</li>\n<li>打开<code>android studio</code>中的<code>安卓模拟器</code>，或者将<code>启用USB调试的真机</code>连接到电脑上，运行<code>weex run android</code>，打包部署weex项目</li>\n<li>部署完成，查看项目效果</li>\n</ol>\n<h2 id=\"总结重点\"><a href=\"#总结重点\" class=\"headerlink\" title=\"总结重点\"></a>总结重点</h2><ol>\n<li>什么是前端移动App开发</li>\n<li>市面上常见的App开发方式及优缺点</li>\n<li>使用Hbuilder在线生成安卓应用</li>\n<li>学会配置ReactNative开发环境</li>\n<li>掌握ReactNative打包流程</li>\n</ol>\n","categories":[{"name":"混合移动App","slug":"混合移动App","count":1,"path":"api/categories/混合移动App.json"}],"tags":[{"name":"混合移动App","slug":"混合移动App","count":1,"path":"api/tags/混合移动App.json"}]}